name: CI
env:
  APP_NAME: espeak-rs
on:
  push:
    branches:
      - master
jobs:
  build:
    name: stable - x86_64-unknown-linux-gnu - node@16
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true
          architecture: x64
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get -y install gcc libespeak-ng-dev libclang-dev
      - name: Install rust build dependencies
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
      - name: Build
        run: npm run build && strip *.node
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  test-linux-x64-gnu-binding:
    name: Test bindings on Linux-x64-gnu - node@16
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - test-linux-x64-gnu-binding
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Move artifacts
        run: npm run artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          npm set //npm.pkg.github.com/:_authToken $GITHUB_TOKEN
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
